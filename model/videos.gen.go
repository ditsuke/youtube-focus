// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameVideo = "videos"

// Video mapped from table <videos>
type Video struct {
	ID           int64          `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	CreatedAt    time.Time      `gorm:"column:created_at" json:"created_at"`
	UpdatedAt    time.Time      `gorm:"column:updated_at" json:"updated_at"`
	DeletedAt    gorm.DeletedAt `gorm:"column:deleted_at" json:"deleted_at"`
	VideoID      string         `gorm:"column:video_id;not null" json:"video_id"`
	Title        string         `gorm:"column:title" json:"title"`
	Description  string         `gorm:"column:description" json:"description"`
	PublishedAt  time.Time      `gorm:"column:published_at" json:"published_at"`
	ThumbnailURL string         `gorm:"column:thumbnail_url" json:"thumbnail_url"`
	// @todo: the `default` gorm tag here is hand-edited. factor this into the codegen process, maybe with sed/awk?
	// alternatively and better yet, make a PR to gorm/gen to add generated-column detection so it can auto-do the `default:(-)`
	Tsv string `gorm:"<-;column:tsv;default(-);" json:"tsv"`
}

// TableName Video's table name
func (*Video) TableName() string {
	return TableNameVideo
}
